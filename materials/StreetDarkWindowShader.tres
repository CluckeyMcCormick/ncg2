[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=1]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
output_port_for_preview = 1
uniform_name = "texture_windows"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv2"

[sub_resource type="VisualShaderNodeTextureUniform" id=5]
uniform_name = "texture_street_dark2"

[sub_resource type="VisualShaderNodeColorUniform" id=6]
uniform_name = "dark_color"

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "street_color"

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "window_color"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, world_vertex_coords;

uniform vec4 dark_color : hint_color;
uniform vec4 street_color : hint_color;
uniform sampler2D texture_street_dark2;
uniform vec4 window_color : hint_color;
uniform sampler2D texture_windows;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:4
	vec3 n_out4p0 = dark_color.rgb;
	float n_out4p1 = dark_color.a;

// ColorUniform:5
	vec3 n_out5p0 = street_color.rgb;
	float n_out5p1 = street_color.a;

// TextureUniform:28
	vec3 n_out28p0;
	float n_out28p1;
	{
		vec4 n_tex_read = texture(texture_street_dark2, UV.xy);
		n_out28p0 = n_tex_read.rgb;
		n_out28p1 = n_tex_read.a;
	}

// VectorScalarMix:22
	vec3 n_out22p0 = mix(n_out4p0, n_out5p0, n_out28p1);

// ColorUniform:6
	vec3 n_out6p0 = window_color.rgb;
	float n_out6p1 = window_color.a;

// Input:25
	vec3 n_out25p0 = vec3(UV2, 0.0);

// TextureUniform:24
	vec3 n_out24p0;
	float n_out24p1;
	{
		vec4 n_tex_read = texture(texture_windows, n_out25p0.xy);
		n_out24p0 = n_tex_read.rgb;
		n_out24p1 = n_tex_read.a;
	}

// VectorScalarMix:23
	vec3 n_out23p0 = mix(n_out22p0, n_out6p0, n_out24p1);

// Output:0
	ALBEDO = n_out23p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, -330 )
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 860, 140 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( 160, -120 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 160, 0 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 220, 160 )
nodes/fragment/22/node = SubResource( 1 )
nodes/fragment/22/position = Vector2( 380, 40 )
nodes/fragment/23/node = SubResource( 2 )
nodes/fragment/23/position = Vector2( 600, 140 )
nodes/fragment/24/node = SubResource( 3 )
nodes/fragment/24/position = Vector2( 220, 280 )
nodes/fragment/25/node = SubResource( 4 )
nodes/fragment/25/position = Vector2( 40, 360 )
nodes/fragment/28/node = SubResource( 5 )
nodes/fragment/28/position = Vector2( -80, 0 )
nodes/fragment/connections = PoolIntArray( 5, 0, 22, 1, 4, 0, 22, 0, 22, 0, 23, 0, 6, 0, 23, 1, 23, 0, 0, 0, 24, 1, 23, 2, 25, 0, 24, 0, 28, 1, 22, 2 )
