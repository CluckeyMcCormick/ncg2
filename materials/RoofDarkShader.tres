[gd_resource type="VisualShader" load_steps=17 format=2]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=1]

[sub_resource type="VisualShaderNodeInput" id=5]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTextureUniform" id=7]
uniform_name = "lower_gradient_pack"

[sub_resource type="VisualShaderNodeTextureUniform" id=8]
uniform_name = "higher_gradient_pack"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=11]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=12]
output_port_for_preview = 2

[sub_resource type="VisualShaderNodeColorUniform" id=3]
uniform_name = "dark_color"

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=19]
uniform_name = "TopGradientScale"

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "alpha"

[sub_resource type="VisualShaderNodeScalarInterp" id=22]

[sub_resource type="VisualShaderNodeScalarInterp" id=23]

[sub_resource type="VisualShaderNodeColorUniform" id=4]
uniform_name = "street_color"

[sub_resource type="VisualShaderNodeScalarInterp" id=24]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform vec4 dark_color : hint_color;
uniform vec4 street_color : hint_color;
uniform vec3 TopGradientScale;
uniform sampler2D lower_gradient_pack;
uniform sampler2D higher_gradient_pack;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:4
	vec3 n_out4p0 = dark_color.rgb;
	float n_out4p1 = dark_color.a;

// ColorUniform:5
	vec3 n_out5p0 = street_color.rgb;
	float n_out5p1 = street_color.a;

// Input:42
	vec3 n_out42p0 = vec3(UV, 0.0);

// VectorUniform:44
	vec3 n_out44p0 = TopGradientScale;

// VectorOp:43
	vec3 n_out43p0 = n_out42p0 * n_out44p0;

// TextureUniform:32
	vec3 n_out32p0;
	float n_out32p1;
	{
		vec4 n_tex_read = texture(lower_gradient_pack, n_out43p0.xy);
		n_out32p0 = n_tex_read.rgb;
		n_out32p1 = n_tex_read.a;
	}

// TextureUniform:33
	vec3 n_out33p0;
	float n_out33p1;
	{
		vec4 n_tex_read = texture(higher_gradient_pack, n_out43p0.xy);
		n_out33p0 = n_tex_read.rgb;
		n_out33p1 = n_tex_read.a;
	}

// Input:47
	float n_out47p0 = COLOR.a;

// VectorScalarMix:36
	vec3 n_out36p0 = mix(n_out32p0, n_out33p0, n_out47p0);

// VectorDecompose:37
	float n_out37p0 = n_out36p0.x;
	float n_out37p1 = n_out36p0.y;
	float n_out37p2 = n_out36p0.z;

// Input:30
	vec3 n_out30p0 = COLOR.rgb;

// VectorDecompose:31
	float n_out31p0 = n_out30p0.x;
	float n_out31p1 = n_out30p0.y;
	float n_out31p2 = n_out30p0.z;

// ScalarMix:48
	float n_in48p0 = 0.00000;
	float n_out48p0 = mix(n_in48p0, n_out37p0, n_out31p0);

// ScalarMix:49
	float n_out49p0 = mix(n_out48p0, n_out37p1, n_out31p1);

// ScalarMix:50
	float n_out50p0 = mix(n_out49p0, n_out37p2, n_out31p2);

// VectorScalarMix:22
	vec3 n_out22p0 = mix(n_out4p0, n_out5p0, n_out50p0);

// Output:0
	ALBEDO = n_out22p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 190.155, 157.052 )
nodes/fragment/0/position = Vector2( 1000, 220 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 500, 240 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 500, 360 )
nodes/fragment/22/node = SubResource( 1 )
nodes/fragment/22/position = Vector2( 740, 380 )
nodes/fragment/30/node = SubResource( 5 )
nodes/fragment/30/position = Vector2( -320, 580 )
nodes/fragment/31/node = SubResource( 6 )
nodes/fragment/31/position = Vector2( -120, 580 )
nodes/fragment/32/node = SubResource( 7 )
nodes/fragment/32/position = Vector2( -780, 240 )
nodes/fragment/33/node = SubResource( 8 )
nodes/fragment/33/position = Vector2( -780, 440 )
nodes/fragment/36/node = SubResource( 11 )
nodes/fragment/36/position = Vector2( -320, 360 )
nodes/fragment/37/node = SubResource( 12 )
nodes/fragment/37/position = Vector2( -120, 360 )
nodes/fragment/42/node = SubResource( 17 )
nodes/fragment/42/position = Vector2( -1340, 360 )
nodes/fragment/43/node = SubResource( 18 )
nodes/fragment/43/position = Vector2( -1160, 380 )
nodes/fragment/44/node = SubResource( 19 )
nodes/fragment/44/position = Vector2( -1360, 480 )
nodes/fragment/47/node = SubResource( 21 )
nodes/fragment/47/position = Vector2( -580, 400 )
nodes/fragment/48/node = SubResource( 22 )
nodes/fragment/48/position = Vector2( 160, 320 )
nodes/fragment/49/node = SubResource( 23 )
nodes/fragment/49/position = Vector2( 340, 400 )
nodes/fragment/50/node = SubResource( 24 )
nodes/fragment/50/position = Vector2( 500, 480 )
nodes/fragment/connections = PoolIntArray( 22, 0, 0, 0, 32, 0, 36, 0, 33, 0, 36, 1, 36, 0, 37, 0, 44, 0, 43, 1, 42, 0, 43, 0, 43, 0, 32, 0, 43, 0, 33, 0, 30, 0, 31, 0, 47, 0, 36, 2, 48, 0, 49, 0, 49, 0, 50, 0, 50, 0, 22, 2, 5, 0, 22, 1, 4, 0, 22, 0, 31, 0, 48, 2, 31, 1, 49, 2, 31, 2, 50, 2, 37, 0, 48, 1, 37, 1, 49, 1, 37, 2, 50, 1 )
