[gd_resource type="VisualShader" load_steps=13 format=2]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=1]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=3]

[sub_resource type="VisualShaderNodeScalarInterp" id=4]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 14

[sub_resource type="VisualShaderNodeTextureUniform" id=6]
uniform_name = "DotTexture"

[sub_resource type="VisualShaderNodeColorUniform" id=7]
output_port_for_preview = 0
uniform_name = "BuildingColor"

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "RedDotColor"

[sub_resource type="VisualShaderNodeColorUniform" id=9]
uniform_name = "GreenDotColor"

[sub_resource type="VisualShaderNodeColorUniform" id=10]
uniform_name = "BlueDotColor"

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=12]

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, specular_schlick_ggx, unshaded, world_vertex_coords;

uniform vec4 BuildingColor : hint_color;
uniform vec4 RedDotColor : hint_color;
uniform sampler2D DotTexture;
uniform vec4 BlueDotColor : hint_color;
uniform vec4 GreenDotColor : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = BuildingColor.rgb;
	float n_out3p1 = BuildingColor.a;

// ColorUniform:5
	vec3 n_out5p0 = RedDotColor.rgb;
	float n_out5p1 = RedDotColor.a;

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(DotTexture, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// VectorDecompose:8
	float n_out8p0 = n_out2p0.x;
	float n_out8p1 = n_out2p0.y;
	float n_out8p2 = n_out2p0.z;

// VectorScalarMix:9
	vec3 n_in9p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out9p0 = mix(n_in9p0, n_out5p0, n_out8p0);

// ColorUniform:7
	vec3 n_out7p0 = BlueDotColor.rgb;
	float n_out7p1 = BlueDotColor.a;

// VectorScalarMix:10
	vec3 n_out10p0 = mix(n_out9p0, n_out7p0, n_out8p1);

// ColorUniform:6
	vec3 n_out6p0 = GreenDotColor.rgb;
	float n_out6p1 = GreenDotColor.a;

// VectorScalarMix:11
	vec3 n_out11p0 = mix(n_out10p0, n_out6p0, n_out8p2);

// VectorScalarMix:12
	vec3 n_out12p0 = mix(n_out3p0, n_out11p0, n_out2p1);

// ScalarFunc:14
	float n_out14p0 = floor(n_out2p1);

// ScalarMix:13
	float n_out13p0 = mix(n_out3p1, n_out2p1, n_out14p0);

// Output:0
	ALBEDO = n_out12p0;
	ALPHA = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 510.281, 191.25 )
modes/depth_draw = 3
flags/unshaded = true
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 900, 280 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -280, 160 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 180, 420 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( 0, -140 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 0, 60 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( 0, -40 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( -20, 160 )
nodes/fragment/9/node = SubResource( 12 )
nodes/fragment/9/position = Vector2( 240, -80 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 440, 20 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 640, 100 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 640, 240 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 640, 340 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 160, 360 )
nodes/fragment/connections = PoolIntArray( 2, 0, 8, 0, 10, 0, 11, 0, 9, 0, 10, 0, 8, 0, 9, 2, 8, 1, 10, 2, 8, 2, 11, 2, 5, 0, 9, 1, 7, 0, 10, 1, 6, 0, 11, 1, 2, 1, 12, 2, 12, 0, 0, 0, 11, 0, 12, 1, 3, 0, 12, 0, 3, 1, 13, 0, 2, 1, 13, 1, 13, 0, 0, 1, 2, 1, 14, 0, 14, 0, 13, 2 )
nodes/light/0/position = Vector2( 1500, 260 )
