[gd_resource type="VisualShader" load_steps=15 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorClamp" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "light"

[sub_resource type="VisualShaderNodeVectorLen" id=13]

[sub_resource type="VisualShaderNodeVectorCompose" id=14]

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "ramp"

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "diffuse"

[sub_resource type="VisualShaderNodeScalarClamp" id=22]
default_input_values = [ 0, 0.0, 1, 0.01, 2, 0.99 ]

[sub_resource type="VisualShaderNodeVectorLen" id=23]

[sub_resource type="VisualShaderNodeIf" id=24]

[sub_resource type="VisualShaderNodeVectorLen" id=25]

[sub_resource type="VisualShaderNodeDotProduct" id=19]

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "normal"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, world_vertex_coords;

uniform sampler2D ramp;



void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Input:30
	vec3 n_out30p0 = DIFFUSE_LIGHT;

// VectorLen:34
	float n_out34p0 = length(n_out30p0);

// Input:8
	vec3 n_out8p0 = NORMAL;

// Input:2
	vec3 n_out2p0 = LIGHT;

// DotProduct:7
	float n_out7p0 = dot(n_out8p0, n_out2p0);

// VectorClamp:12
	vec3 n_in12p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in12p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out12p0 = clamp(vec3(n_out7p0), n_in12p1, n_in12p2);

// Input:10
	vec3 n_out10p0 = ATTENUATION;

// VectorOp:13
	vec3 n_out13p0 = n_out12p0 * n_out10p0;

// VectorLen:26
	float n_out26p0 = length(n_out13p0);

// ScalarClamp:32
	float n_in32p1 = 0.01000;
	float n_in32p2 = 0.99000;
	float n_out32p0 = clamp(n_out26p0, n_in32p1, n_in32p2);

// VectorCompose:27
	float n_in27p1 = 0.00000;
	float n_in27p2 = 0.00000;
	vec3 n_out27p0 = vec3(n_out32p0, n_in27p1, n_in27p2);

// TextureUniform:28
	vec3 n_out28p0;
	float n_out28p1;
	{
		vec4 n_tex_read = texture(ramp, n_out27p0.xy);
		n_out28p0 = n_tex_read.rgb;
		n_out28p1 = n_tex_read.a;
	}

// VectorLen:36
	float n_out36p0 = length(n_out28p0);

// If:35
	float n_in35p2 = 0.00001;
	vec3 n_out35p0;
	if(abs(n_out34p0 - n_out36p0) < n_in35p2)
	{
		n_out35p0 = n_out30p0;
	}
	else if(n_out34p0 < n_out36p0)
	{
		n_out35p0 = n_out28p0;
	}
	else
	{
		n_out35p0 = n_out30p0;
	}

// Output:0
	DIFFUSE_LIGHT = n_out35p0;

}
"
graph_offset = Vector2( 1497.8, -396 )
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 860, 140 )
nodes/light/0/position = Vector2( 2280, -240 )
nodes/light/2/node = SubResource( 7 )
nodes/light/2/position = Vector2( -160, -80 )
nodes/light/7/node = SubResource( 19 )
nodes/light/7/position = Vector2( 40, -120 )
nodes/light/8/node = SubResource( 20 )
nodes/light/8/position = Vector2( -180, -140 )
nodes/light/10/node = SubResource( 1 )
nodes/light/10/position = Vector2( 200, 0 )
nodes/light/12/node = SubResource( 2 )
nodes/light/12/position = Vector2( 220, -120 )
nodes/light/13/node = SubResource( 3 )
nodes/light/13/position = Vector2( 520, -140 )
nodes/light/26/node = SubResource( 13 )
nodes/light/26/position = Vector2( 720, -120 )
nodes/light/27/node = SubResource( 14 )
nodes/light/27/position = Vector2( 1120, -120 )
nodes/light/28/node = SubResource( 15 )
nodes/light/28/position = Vector2( 1380, -200 )
nodes/light/30/node = SubResource( 18 )
nodes/light/30/position = Vector2( 1400, -280 )
nodes/light/32/node = SubResource( 22 )
nodes/light/32/position = Vector2( 880, -120 )
nodes/light/34/node = SubResource( 23 )
nodes/light/34/position = Vector2( 1780, -320 )
nodes/light/35/node = SubResource( 24 )
nodes/light/35/position = Vector2( 2000, -240 )
nodes/light/36/node = SubResource( 25 )
nodes/light/36/position = Vector2( 1780, -260 )
nodes/light/connections = PoolIntArray( 8, 0, 7, 0, 7, 0, 12, 0, 2, 0, 7, 1, 10, 0, 13, 1, 12, 0, 13, 0, 8, 0, 7, 0, 7, 0, 12, 0, 2, 0, 7, 1, 10, 0, 13, 1, 12, 0, 13, 0, 13, 0, 26, 0, 27, 0, 28, 0, 26, 0, 32, 0, 32, 0, 27, 0, 30, 0, 34, 0, 34, 0, 35, 0, 28, 0, 36, 0, 36, 0, 35, 1, 35, 0, 0, 0, 30, 0, 35, 4, 30, 0, 35, 3, 28, 0, 35, 5 )
