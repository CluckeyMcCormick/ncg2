[gd_resource type="VisualShader" load_steps=24 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorClamp" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "light"

[sub_resource type="VisualShaderNodeVectorLen" id=13]

[sub_resource type="VisualShaderNodeVectorCompose" id=14]
default_input_values = [ 0, 0.0, 1, 0.5, 2, 0.0 ]

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "ramp"

[sub_resource type="VisualShaderNodeScalarClamp" id=22]
default_input_values = [ 0, 0.0, 1, 0.01, 2, 0.99 ]

[sub_resource type="VisualShaderNodeTextureUniform" id=26]
uniform_name = "light0"

[sub_resource type="VisualShaderNodeTextureUniform" id=27]
uniform_name = "light1"

[sub_resource type="VisualShaderNodeTextureUniform" id=28]
uniform_name = "light2"

[sub_resource type="VisualShaderNodeTextureUniform" id=29]
uniform_name = "light3"

[sub_resource type="VisualShaderNodeTextureUniform" id=30]
uniform_name = "light4"

[sub_resource type="VisualShaderNodeTextureUniform" id=31]
uniform_name = "light5"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=40]

[sub_resource type="VisualShaderNodeInput" id=42]
input_name = "light_color"

[sub_resource type="VisualShaderNodeExpression" id=44]
size = Vector2( 593, 280 )
expression = "chosen_texture = dark_texture_rgb;
chosen_texture = mix(chosen_texture, mid_texture_rgb, ramp_rgb.g);
chosen_texture = mix(chosen_texture, light_texture_rgb, ramp_rgb.r);"

[sub_resource type="VisualShaderNodeExpression" id=45]
size = Vector2( 530.8, 283.2 )
expression = "chosen_texture = dark_texture_rgb;
chosen_texture = mix(chosen_texture, mid_texture_rgb, ramp_rgb.g);
chosen_texture = mix(chosen_texture, light_texture_rgb, ramp_rgb.r);"

[sub_resource type="VisualShaderNodeIf" id=46]

[sub_resource type="VisualShaderNodeColorUniform" id=47]
uniform_name = "dark_color"

[sub_resource type="VisualShaderNodeVectorLen" id=48]

[sub_resource type="VisualShaderNodeDotProduct" id=19]

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "normal"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, world_vertex_coords;

uniform sampler2D light0;
uniform sampler2D light1;
uniform sampler2D light2;
uniform sampler2D ramp;
uniform sampler2D light3;
uniform sampler2D light4;
uniform sampler2D light5;
uniform vec4 dark_color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// TextureUniform:37
	vec3 n_out37p0;
	float n_out37p1;
	{
		vec4 n_tex_read = texture(light0, UV.xy);
		n_out37p0 = n_tex_read.rgb;
		n_out37p1 = n_tex_read.a;
	}

// TextureUniform:38
	vec3 n_out38p0;
	float n_out38p1;
	{
		vec4 n_tex_read = texture(light1, UV.xy);
		n_out38p0 = n_tex_read.rgb;
		n_out38p1 = n_tex_read.a;
	}

// TextureUniform:39
	vec3 n_out39p0;
	float n_out39p1;
	{
		vec4 n_tex_read = texture(light2, UV.xy);
		n_out39p0 = n_tex_read.rgb;
		n_out39p1 = n_tex_read.a;
	}

// Input:8
	vec3 n_out8p0 = NORMAL;

// Input:2
	vec3 n_out2p0 = LIGHT;

// DotProduct:7
	float n_out7p0 = dot(n_out8p0, n_out2p0);

// VectorClamp:12
	vec3 n_in12p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in12p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out12p0 = clamp(vec3(n_out7p0), n_in12p1, n_in12p2);

// Input:10
	vec3 n_out10p0 = ATTENUATION;

// VectorOp:13
	vec3 n_out13p0 = n_out12p0 * n_out10p0;

// VectorLen:26
	float n_out26p0 = length(n_out13p0);

// ScalarClamp:32
	float n_in32p1 = 0.01000;
	float n_in32p2 = 0.99000;
	float n_out32p0 = clamp(n_out26p0, n_in32p1, n_in32p2);

// VectorCompose:27
	float n_in27p1 = 0.50000;
	float n_in27p2 = 0.00000;
	vec3 n_out27p0 = vec3(n_out32p0, n_in27p1, n_in27p2);

// TextureUniform:28
	vec3 n_out28p0;
	float n_out28p1;
	{
		vec4 n_tex_read = texture(ramp, n_out27p0.xy);
		n_out28p0 = n_tex_read.rgb;
		n_out28p1 = n_tex_read.a;
	}

// Expression:55
	vec3 n_out55p0;
	n_out55p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out55p0 = n_out37p0;
		n_out55p0 = mix(n_out55p0, n_out38p0, n_out28p0.g);
		n_out55p0 = mix(n_out55p0, n_out39p0, n_out28p0.r);
	}

// TextureUniform:40
	vec3 n_out40p0;
	float n_out40p1;
	{
		vec4 n_tex_read = texture(light3, UV.xy);
		n_out40p0 = n_tex_read.rgb;
		n_out40p1 = n_tex_read.a;
	}

// TextureUniform:41
	vec3 n_out41p0;
	float n_out41p1;
	{
		vec4 n_tex_read = texture(light4, UV.xy);
		n_out41p0 = n_tex_read.rgb;
		n_out41p1 = n_tex_read.a;
	}

// TextureUniform:42
	vec3 n_out42p0;
	float n_out42p1;
	{
		vec4 n_tex_read = texture(light5, UV.xy);
		n_out42p0 = n_tex_read.rgb;
		n_out42p1 = n_tex_read.a;
	}

// Expression:56
	vec3 n_out56p0;
	n_out56p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out56p0 = n_out40p0;
		n_out56p0 = mix(n_out56p0, n_out41p0, n_out28p0.g);
		n_out56p0 = mix(n_out56p0, n_out42p0, n_out28p0.r);
	}

// VectorScalarMix:51
	vec3 n_out51p0 = mix(n_out55p0, n_out56p0, n_out28p1);

// VectorLen:61
	float n_out61p0 = length(n_out51p0);

// Input:53
	vec3 n_out53p0 = LIGHT_COLOR;

// ColorUniform:59
	vec3 n_out59p0 = dark_color.rgb;
	float n_out59p1 = dark_color.a;

// If:58
	float n_in58p2 = 0.00001;
	vec3 n_out58p0;
	if(abs(n_out61p0 - dot(n_out53p0, vec3(0.333333, 0.333333, 0.333333))) < n_in58p2)
	{
		n_out58p0 = n_out53p0;
	}
	else if(n_out61p0 < dot(n_out53p0, vec3(0.333333, 0.333333, 0.333333)))
	{
		n_out58p0 = n_out59p0;
	}
	else
	{
		n_out58p0 = n_out53p0;
	}

// Output:0
	DIFFUSE_LIGHT = n_out58p0;

}
"
graph_offset = Vector2( 1920.19, -336.604 )
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 860, 140 )
nodes/light/0/position = Vector2( 2820, -200 )
nodes/light/2/node = SubResource( 7 )
nodes/light/2/position = Vector2( -600, -80 )
nodes/light/7/node = SubResource( 19 )
nodes/light/7/position = Vector2( -400, -120 )
nodes/light/8/node = SubResource( 20 )
nodes/light/8/position = Vector2( -620, -140 )
nodes/light/10/node = SubResource( 1 )
nodes/light/10/position = Vector2( -240, 0 )
nodes/light/12/node = SubResource( 2 )
nodes/light/12/position = Vector2( -220, -120 )
nodes/light/13/node = SubResource( 3 )
nodes/light/13/position = Vector2( 80, -140 )
nodes/light/26/node = SubResource( 13 )
nodes/light/26/position = Vector2( 280, -120 )
nodes/light/27/node = SubResource( 14 )
nodes/light/27/position = Vector2( 680, -120 )
nodes/light/28/node = SubResource( 15 )
nodes/light/28/position = Vector2( 1140, -220 )
nodes/light/32/node = SubResource( 22 )
nodes/light/32/position = Vector2( 440, -120 )
nodes/light/37/node = SubResource( 26 )
nodes/light/37/position = Vector2( 1180, -740 )
nodes/light/38/node = SubResource( 27 )
nodes/light/38/position = Vector2( 1000, -660 )
nodes/light/39/node = SubResource( 28 )
nodes/light/39/position = Vector2( 820, -580 )
nodes/light/40/node = SubResource( 29 )
nodes/light/40/position = Vector2( 840, 20 )
nodes/light/41/node = SubResource( 30 )
nodes/light/41/position = Vector2( 1020, 160 )
nodes/light/42/node = SubResource( 31 )
nodes/light/42/position = Vector2( 1200, 300 )
nodes/light/51/node = SubResource( 40 )
nodes/light/51/position = Vector2( 2160, -180 )
nodes/light/53/node = SubResource( 42 )
nodes/light/53/position = Vector2( 2160, -80 )
nodes/light/55/node = SubResource( 44 )
nodes/light/55/position = Vector2( 1540, -500 )
nodes/light/55/size = Vector2( 593, 280 )
nodes/light/55/input_ports = "0,1,dark_texture_rgb;1,1,mid_texture_rgb;2,1,light_texture_rgb;3,1,ramp_rgb;"
nodes/light/55/output_ports = "0,1,chosen_texture;"
nodes/light/55/expression = "chosen_texture = dark_texture_rgb;
chosen_texture = mix(chosen_texture, mid_texture_rgb, ramp_rgb.g);
chosen_texture = mix(chosen_texture, light_texture_rgb, ramp_rgb.r);"
nodes/light/56/node = SubResource( 45 )
nodes/light/56/position = Vector2( 1540, -60 )
nodes/light/56/size = Vector2( 530.8, 283.2 )
nodes/light/56/input_ports = "0,1,ramp_rgb;1,1,dark_texture_rgb;2,1,mid_texture_rgb;3,1,light_texture_rgb;"
nodes/light/56/output_ports = "0,1,chosen_texture;"
nodes/light/56/expression = "chosen_texture = dark_texture_rgb;
chosen_texture = mix(chosen_texture, mid_texture_rgb, ramp_rgb.g);
chosen_texture = mix(chosen_texture, light_texture_rgb, ramp_rgb.r);"
nodes/light/58/node = SubResource( 46 )
nodes/light/58/position = Vector2( 2620, -180 )
nodes/light/59/node = SubResource( 47 )
nodes/light/59/position = Vector2( 2160, -20 )
nodes/light/61/node = SubResource( 48 )
nodes/light/61/position = Vector2( 2380, -180 )
nodes/light/connections = PoolIntArray( 8, 0, 7, 0, 7, 0, 12, 0, 2, 0, 7, 1, 10, 0, 13, 1, 12, 0, 13, 0, 8, 0, 7, 0, 7, 0, 12, 0, 2, 0, 7, 1, 10, 0, 13, 1, 12, 0, 13, 0, 13, 0, 26, 0, 27, 0, 28, 0, 26, 0, 32, 0, 32, 0, 27, 0, 28, 1, 51, 2, 28, 0, 55, 3, 39, 0, 55, 2, 38, 0, 55, 1, 37, 0, 55, 0, 55, 0, 51, 0, 42, 0, 56, 3, 41, 0, 56, 2, 40, 0, 56, 1, 28, 0, 56, 0, 56, 0, 51, 1, 58, 0, 0, 0, 53, 0, 58, 3, 51, 0, 61, 0, 61, 0, 58, 0, 53, 0, 58, 1, 59, 0, 58, 5, 53, 0, 58, 4 )
